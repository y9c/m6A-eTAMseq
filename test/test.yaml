# can be "ECLIP10", "ECLIP6", "TAKARAV3", "SACSEQV3", "STRANDED", ...
libtype: ECLIP6
# m6A method, use A to G mutation
base_change: 'A,G'
# by default, the pipeline will force remove the PCR duplicates based on the UMI
# if UMI is not available, you can toggle the markdup to `false` to skip the PCR duplicate removal
markdup: true
# by default, the pipeline will use the strandness information from the library
# if the strandness is not available, set the strandness to `false`
strandness: true

gene_norc: true
splice_genome: true

# build in configure for the pipeline
path:
  cutseq: ~/.micromamba/bin/cutseq
  samtools: ~/tools/samtools/samtools
  umicollapse: java -server -Xms8G -Xmx36G -Xss100M -jar ~/tools/UMICollapse/umicollapse.jar bam
  markduplicates: java -server -Xms8G -Xmx36G -Xss100M -jar ~/tools/gatk-4.6.0.0/gatk-package-4.6.0.0-local.jar MarkDuplicates
  hisat3n: ~/tools/hisat2/hisat-3n
  hisat3nbuild: ~/tools/hisat2/hisat-3n-build
  hisat3ntable: ~/tools/hisat2/hisat-3n-table
  joinPileup: python ../../bin/join_pileup.py
  filterSites: python ../../bin/filter_sites.py

# TODO: if the genome index is not available, the pipeline will build it automatically
genome_index: ~/reference/genome/Homo_sapiens/hisat2_tx_3n/GRCh38.release110

reference:
  contamination:
    - ref/contamination.fa.gz
  genes:
    - ref/spikein.fa
    - ref/human_rRNA.fa
  genome:
    - ~/reference/genome/Homo_sapiens/GRCh38.fa

samples:
  HeLa-treat-rep1:
    data:
      - R1: data/SRR21070405_1.fastq.gz
        R2: data/SRR21070405_2.fastq.gz
      - R1: data/SRR21070406_1.fastq.gz
  HeLa-treat-rep2:
    data:
      - R1: data/SRR21070404_1.fastq.gz
