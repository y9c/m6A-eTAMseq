# build in configure for the pipeline
path:
  cutseq: /opt/app_venv/bin/cutseq
  samtools: /pipeline/samtools/samtools
  umicollapse: java -server -Xms8G -Xmx36G -Xss100M -jar /pipeline/UMICollapse/umicollapse.jar bam
  markduplicates: java -server -Xms8G -Xmx36G -Xss100M -jar /pipeline/gatk/gatk.jar MarkDuplicates
  hisat3n: /pipeline/hisat2-hisat-3n/hisat-3n
  hisat3nbuild: /pipeline/hisat2-hisat-3n/hisat-3n-build
  hisat3ntable: /pipeline/hisat2-hisat-3n/hisat-3n-table
  pb: /pipeline/pbr/pbr
  collectReadCounts: python /pipeline/script/collect_read_counts.py
  convertPileup: python /pipeline/script/pileup_to_arrow.py
  joinPileup: python /pipeline/script/join_pileup.py
  filterSites: python /pipeline/script/filter_sites.py

# can be "ECLIP10", "ECLIP6", "TAKARAV3", "SACSEQV3", "STRANDED", ...
libtype: ECLIP6
# m6A method, use A to G mutation
base_change: 'A,G'
# by default, the pipeline will force remove the PCR duplicates based on the UMI
# if UMI is not available, you can toggle the markdup to `false` to skip the PCR duplicate removal
markdup: true
# by default, the pipeline will use the strandness information from the library
# if the strandness is not available, set the strandness to `false`
strandness: true

gene_norc: true
splice_genome: true
